	/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FontDialog.java
 *
 * Created on 2010-11-10, 4:16:47
 */

package eboard.view;

import java.awt.Color;
import java.awt.Font;
import java.awt.GraphicsEnvironment;
import java.awt.Point;
/**
 *
 * @author elf
 */
public class FontDialog extends javax.swing.JDialog {

    private static Font font = new Font(Font.SERIF,Font.PLAIN,18);
    private NewJPanel njf = null;
    private int x = 0;
    private int y = 0;

    public FontDialog(NewJPanel parent, Color c, int x, int y){
//        super(parent);
        initComponents();
        jcbFontSize.setSelectedItem(String.valueOf(18));
        jcbStyle.setSelectedItem(Font.SERIF);
        setSize(300, 130);

        this.jtpInput.setForeground(c);
        njf = parent;
        this.x = x;
        this.y = y;

    }

    public void setEnviroment(NewJPanel parent, Color c, int x, int y){
        this.jtpInput.setText("");
        jcbFontSize.setSelectedItem(String.valueOf(18));
        jcbStyle.setSelectedItem(Font.SERIF);
        this.jtpInput.setForeground(c);
        njf = parent;
        this.x = x;
        this.y = y;
        
    }

    FontDialog(){
        initComponents();
        setSize(300, 150);
    }

    public Point getPoint(){
        return new Point(x,y);
    }
    /** Creates new form FontDialog */
    private FontDialog(java.awt.Frame parent, boolean modal) {
//        super(parent, modal);
        initComponents();
        this.jcbFontSize.setSelectedItem(String.valueOf(18));
        this.jcbStyle.setSelectedItem(Font.SERIF);
        this.setSize(300, 150);

        
    }


    private void setText(){
        String text = this.jtpInput.getText();
        if(text != null && text.length()>0)

        this.njf.setText(text,font,x,y);
//        this.njf.shapeNumber =10;
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtpInput = new javax.swing.JTextPane();
        jcbStyle = new javax.swing.JComboBox(GraphicsEnvironment.getLocalGraphicsEnvironment().getAvailableFontFamilyNames());
        jcbFontSize = new javax.swing.JComboBox();
        jtbtB = new javax.swing.JToggleButton();
        jtbtI = new javax.swing.JToggleButton();

        setAlwaysOnTop(true);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setModalExclusionType(null);
        setName("dialogFont"); // NOI18N
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
                formWindowLostFocus(evt);
            }
        });
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                formFocusLost(evt);
            }
        });

        jtpInput.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jScrollPane1.setViewportView(jtpInput);

        jcbStyle.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbStyleItemStateChanged(evt);
            }
        });

        jcbFontSize.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "8", "9", "10", "11", "12", "14", "16", "18", "20", "22", "24", "26", "28", "36", "48", "72", " " }));
        jcbFontSize.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbFontSizeItemStateChanged(evt);
            }
        });

        jtbtB.setFont(new java.awt.Font("宋体", 1, 12));
        jtbtB.setText("B");
        jtbtB.setAlignmentY(0.0F);
        jtbtB.setIconTextGap(0);
        jtbtB.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jtbtB.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jtbtBStateChanged(evt);
            }
        });

        jtbtI.setFont(new java.awt.Font("宋体", 2, 12));
        jtbtI.setText("I");
        jtbtI.setAlignmentY(0.0F);
        jtbtI.setIconTextGap(0);
        jtbtI.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jtbtI.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jtbtIStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jcbStyle, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcbFontSize, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtbtB, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtbtI, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbStyle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbFontSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtbtB)
                    .addComponent(jtbtI))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(111, 111, 111))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtbtBStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jtbtBStateChanged
        // TODO add your handling code here:
        if(this.jtbtB.isSelected()){
            font  = new Font(font.getName(),font.getStyle()|Font.BOLD,font.getSize());

        }else{
            font  = new Font(font.getName(),font.getStyle()&Font.ITALIC,font.getSize());
        }

        setFont();

    }//GEN-LAST:event_jtbtBStateChanged

    private void jtbtIStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jtbtIStateChanged
        // TODO add your handling code here:
        if(this.jtbtI.isSelected()){
            font  = new Font(font.getName(),font.getStyle()|Font.ITALIC,font.getSize());

        }else{
            font  = new Font(font.getName(),font.getStyle()&Font.BOLD,font.getSize());
        }

        setFont();
    }//GEN-LAST:event_jtbtIStateChanged

    private void jcbFontSizeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbFontSizeItemStateChanged
        
        String fontSize = (String)this.jcbFontSize.getSelectedItem();
        try{
            font = new Font(font.getName(),font.getStyle(),Integer.parseInt(fontSize));
        }catch(NumberFormatException nfe){
            nfe.printStackTrace();
        }
        this.setFont();
    }//GEN-LAST:event_jcbFontSizeItemStateChanged

    private void jcbStyleItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbStyleItemStateChanged
        String fontName = (String)this.jcbStyle.getSelectedItem();
        try{
            font = new Font(fontName,font.getStyle(),font.getSize());
        }catch(NumberFormatException nfe){
            nfe.printStackTrace();
        }
        this.setFont();
    }//GEN-LAST:event_jcbStyleItemStateChanged

    private void formFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusLost
        // TODO add your handling code here:
//        this.dispose();
//        System.out.println("dddd1111");
//        System.exit(0);
    }//GEN-LAST:event_formFocusLost

    private void formWindowLostFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowLostFocus
        // TODO add your handling code here:
        setText();
        this.setVisible(false);
        
//        System.exit(0);
//        System.out.println("dddd2222");
    }//GEN-LAST:event_formWindowLostFocus

    public static Font getFont(String s){
        return font;
    }
    private void setFont(){
        this.jtpInput.setFont(font);
        String text = this.jtpInput.getText();
        if(text != null && text.length()>0)
        this.jtpInput.setText(text);
    }
    
    public void setFont(Font f){
        
        font = f;
//        this.jtpInput.setForeground(Color.black);
        this.jtpInput.setFont(f);
        String text = this.jtpInput.getText();
        if(text != null && text.length()>0)
        this.jtpInput.setText(text);
        

   
    }
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FontDialog dialog = new FontDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox jcbFontSize;
    private javax.swing.JComboBox jcbStyle;
    private javax.swing.JToggleButton jtbtB;
    private javax.swing.JToggleButton jtbtI;
    private javax.swing.JTextPane jtpInput;
    // End of variables declaration//GEN-END:variables

    
}
