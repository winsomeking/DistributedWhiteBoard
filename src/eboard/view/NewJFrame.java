package eboard.view;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NewJFrame.java
 *
 * Created on Oct 18, 2010, 3:21:28 PM
 */

/**
 *
 * @author albertwang
 */
import eboard.control.Application;
import eboard.itf.control.IApplication;
import eboard.itf.model.IResponse;
import eboard.itf.model.IRoom;
import eboard.model.IShape;
import eboard.model.RoomInfo;
import java.io.*;
import java.awt.*;
import java.awt.event.MouseEvent;
import javax.swing.*;
import java.awt.image.BufferedImage;
//import java.io.*;
import javax.imageio.*;

public class NewJFrame extends javax.swing.JFrame {

    private IRoom room = null;
    private NewJPanel newJPanel1 = null;
    private int scaleFlag = 0;
    FontDialog fd = null;
    /** Creates new form NewJFrame */
    public NewJFrame(IRoom r) {
        this.room = r;
        this.newJPanel1 = new NewJPanel(room);

         this.add(newJPanel1);
        initComponents();
       
        this.newJPanel1.setSize(810,320);
        this.newJPanel1.setLocation(0, 75);
        this.setResizable(false);
        
       this.setBounds(100, 60, 816, 640);//Think it through before change this size ,please.

       this.jpColorBar.setSize(220,50);
       for(int i = 0;i < 16 ; i ++){
            Panel p = new Panel();
            int a = 10+i*30;
            int b = 30+i*20;
            int c = 40+i*10;
            switch(i){
                case 1:
                     p.setBackground(Color.RED);
                    break;
                case 2:
                     p.setBackground(Color.ORANGE);
                    break;
                case 3:
                     p.setBackground(Color.YELLOW);
                    break;
                case 4:
                     p.setBackground(Color.GREEN);
                    break;
                 case 5:
                    p.setBackground(Color.cyan);
                    break;
                 case 6:
                     p.setBackground(Color.BLUE);
                    break;
                case 7:
                     p.setBackground(Color.MAGENTA);
                    break;
                default:
                    p.setBackground(new Color(a%255,b%255,c%255));
                    break;
                    
            }
           
            p.setSize(10,10);
            
            p.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseReleased(java.awt.event.MouseEvent evt) {
                    quickChooseColor(evt);
             }
            });
            this.jpColorBar.add(p);
       }

       repaint();
       fd = new FontDialog();
       try{
            this.setIconImage(ImageIO.read(
                getClass().getResource("/eboard/resource/snail2.bmp")));
        }catch(Exception e){
            System.out.println(e.getMessage());
        }
       RoomInfo ri = room.getRoomInfo();
       this.setTitle("eBoard. Room name: "+ri.getRoomName()
               +". IP: "+ ri.getIp()+ " port: "+ri.getPort()+
               " Admin name is "+ri.getOwner().getUserName()+
               ". id is "+room.getRoomOwnerUserId());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jpmKickMenu = new javax.swing.JPopupMenu();
        jmiKick = new javax.swing.JMenuItem();
        jplMainPanel = new javax.swing.JPanel();
        jlbCoordinates = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        clstUserList = new ColorfulList();
        jScrollPane2 = new javax.swing.JScrollPane();
        ctpReceiveMsg = new ColorfulTextPane();
        jtfInput = new javax.swing.JTextField();
        jlbToWho = new javax.swing.JLabel();
        jbtClear = new javax.swing.JButton();
        jbtSend = new javax.swing.JButton();
        cfcbToWho = new ColorfulComboBox();
        jpColorBar = new javax.swing.JPanel();
        jpToolBar = new javax.swing.JPanel();
        jButton7 = new javax.swing.JButton();
        jButton21 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jbtUndo = new javax.swing.JButton();
        jbtRedo = new javax.swing.JButton();
        jbtClean = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jplBgColor = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jmiNew = new javax.swing.JMenuItem();
        jmiConnect = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        jmiOpen = new javax.swing.JMenuItem();
        jmiSave = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jmiClose = new javax.swing.JMenuItem();
        jmiExit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jmiUndo = new javax.swing.JMenuItem();
        jmiRedo = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 100, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 100, Short.MAX_VALUE)
        );

        jButton2.setText("jButton2");
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setMaximumSize(new java.awt.Dimension(45, 45));
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        jmiKick.setText("Kick out");
        jmiKick.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiKickActionPerformed(evt);
            }
        });
        jpmKickMenu.add(jmiKick);

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Whiteboard");
        setBounds(new java.awt.Rectangle(100, 100, 900, 700));
        setName("frmMainFrame"); // NOI18N
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(null);

        jplMainPanel.setPreferredSize(new java.awt.Dimension(1255, 821));
        jplMainPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jlbCoordinates.setText("Coordinates");
        jlbCoordinates.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jlbCoordinates.setOpaque(true);
        jplMainPanel.add(jlbCoordinates, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 540, 800, 30));

        clstUserList.setBorder(javax.swing.BorderFactory.createTitledBorder("User List"));
        clstUserList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        clstUserList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                clstUserListMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(clstUserList);

        ctpReceiveMsg.setBorder(javax.swing.BorderFactory.createTitledBorder("Messages:"));
        ctpReceiveMsg.setEditable(false);
        jScrollPane2.setViewportView(ctpReceiveMsg);

        jtfInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfInputActionPerformed(evt);
            }
        });

        jlbToWho.setText("Say to");

        jbtClear.setText("Clear");
        jbtClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtClearActionPerformed(evt);
            }
        });

        jbtSend.setText("Send");
        jbtSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtSendActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 137, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel4Layout.createSequentialGroup()
                        .add(10, 10, 10)
                        .add(jlbToWho)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(cfcbToWho, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jtfInput, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 335, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jbtClear)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jbtSend, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 71, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 647, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel4Layout.createSequentialGroup()
                        .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jtfInput, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jbtSend)
                            .add(jlbToWho)
                            .add(cfcbToWho, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jbtClear)))
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 95, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jplMainPanel.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 410, 810, 130));

        jpColorBar.setLayout(new java.awt.GridLayout(2, 8, 3, 3));
        jplMainPanel.add(jpColorBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 10, 220, 60));

        jpToolBar.setLayout(new java.awt.GridLayout(2, 7, 1, 1));

        jButton7.setBackground(new java.awt.Color(255, 255, 255));
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/eboard/resource/move.gif"))); // NOI18N
        jButton7.setToolTipText("select");
        jButton7.setFocusable(false);
        jButton7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton7.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButton7.setMaximumSize(new java.awt.Dimension(45, 45));
        jButton7.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jpToolBar.add(jButton7);

        jButton21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/eboard/resource/pencil.gif"))); // NOI18N
        jButton21.setFocusable(false);
        jButton21.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton21.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButton21.setMaximumSize(new java.awt.Dimension(45, 45));
        jButton21.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });
        jpToolBar.add(jButton21);

        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/eboard/resource/line.gif"))); // NOI18N
        jButton10.setFocusable(false);
        jButton10.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton10.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButton10.setMaximumSize(new java.awt.Dimension(45, 45));
        jButton10.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LineButtonActionPerformed(evt);
            }
        });
        jpToolBar.add(jButton10);

        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/eboard/resource/rect.gif"))); // NOI18N
        jButton11.setFocusable(false);
        jButton11.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton11.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButton11.setMaximumSize(new java.awt.Dimension(45, 45));
        jButton11.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RectButtonActionPerformed(evt);
            }
        });
        jpToolBar.add(jButton11);

        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/eboard/resource/oval.gif"))); // NOI18N
        jButton9.setFocusable(false);
        jButton9.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton9.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButton9.setMaximumSize(new java.awt.Dimension(45, 45));
        jButton9.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EllipsebuttonActionPerformed(evt);
            }
        });
        jpToolBar.add(jButton9);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/eboard/resource/text.gif"))); // NOI18N
        jButton4.setFocusable(false);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButton4.setMaximumSize(new java.awt.Dimension(45, 45));
        jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextActionPerformed(evt);
            }
        });
        jpToolBar.add(jButton4);

        jButton20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/eboard/resource/2.GIF"))); // NOI18N
        jButton20.setFocusable(false);
        jButton20.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton20.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButton20.setMaximumSize(new java.awt.Dimension(45, 45));
        jButton20.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });
        jpToolBar.add(jButton20);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/eboard/resource/gtk-zoom-in.png"))); // NOI18N
        jButton5.setToolTipText("Zoom In");
        jButton5.setFocusable(false);
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton5.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButton5.setMaximumSize(new java.awt.Dimension(45, 45));
        jButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jpToolBar.add(jButton5);

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/eboard/resource/gtk-zoom-out.png"))); // NOI18N
        jButton6.setToolTipText("Zoom Out");
        jButton6.setFocusable(false);
        jButton6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton6.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButton6.setMaximumSize(new java.awt.Dimension(45, 45));
        jButton6.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jpToolBar.add(jButton6);

        jbtUndo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/eboard/resource/undo.gif"))); // NOI18N
        jbtUndo.setFocusable(false);
        jbtUndo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbtUndo.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jbtUndo.setMaximumSize(new java.awt.Dimension(45, 45));
        jbtUndo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbtUndo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtUndoActionPerformed(evt);
            }
        });
        jpToolBar.add(jbtUndo);

        jbtRedo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/eboard/resource/redo.gif"))); // NOI18N
        jbtRedo.setFocusable(false);
        jbtRedo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbtRedo.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jbtRedo.setMaximumSize(new java.awt.Dimension(45, 45));
        jbtRedo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbtRedo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtRedoActionPerformed(evt);
            }
        });
        jpToolBar.add(jbtRedo);

        jbtClean.setIcon(new javax.swing.ImageIcon(getClass().getResource("/eboard/resource/clear.gif"))); // NOI18N
        jbtClean.setFocusable(false);
        jbtClean.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbtClean.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jbtClean.setMaximumSize(new java.awt.Dimension(45, 45));
        jbtClean.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbtClean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtCleanActionPerformed(evt);
            }
        });
        jpToolBar.add(jbtClean);

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/eboard/resource/colorBox.gif"))); // NOI18N
        jButton8.setToolTipText("Image");
        jButton8.setFocusable(false);
        jButton8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton8.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButton8.setMaximumSize(new java.awt.Dimension(45, 45));
        jButton8.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jpToolBar.add(jButton8);

        jplMainPanel.add(jpToolBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 240, 60));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Color"));

        jplBgColor.setBackground(new java.awt.Color(204, 51, 0));
        jplBgColor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jplBgColorMouseReleased(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jplBgColorLayout = new org.jdesktop.layout.GroupLayout(jplBgColor);
        jplBgColor.setLayout(jplBgColorLayout);
        jplBgColorLayout.setHorizontalGroup(
            jplBgColorLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 16, Short.MAX_VALUE)
        );
        jplBgColorLayout.setVerticalGroup(
            jplBgColorLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 17, Short.MAX_VALUE)
        );

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jplBgColor, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jplBgColor, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );

        jplMainPanel.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 10, 50, 60));

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 10, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 20, Short.MAX_VALUE)
        );

        jplMainPanel.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 110, 10, 20));

        getContentPane().add(jplMainPanel);
        jplMainPanel.setBounds(0, 1, 820, 590);

        jMenuBar1.setBackground(new java.awt.Color(255, 255, 51));
        jMenuBar1.setPreferredSize(new java.awt.Dimension(86, 30));

        jMenu1.setText("File(F)");

        jmiNew.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jmiNew.setText("New");
        jmiNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiNewActionPerformed(evt);
            }
        });
        jMenu1.add(jmiNew);

        jmiConnect.setText("Connect");
        jmiConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiConnectActionPerformed(evt);
            }
        });
        jMenu1.add(jmiConnect);
        jMenu1.add(jSeparator3);

        jmiOpen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jmiOpen.setText("Open");
        jmiOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiOpenActionPerformed(evt);
            }
        });
        jMenu1.add(jmiOpen);

        jmiSave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jmiSave.setText("Save");
        jmiSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });
        jMenu1.add(jmiSave);
        jMenu1.add(jSeparator2);

        jmiClose.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.CTRL_MASK));
        jmiClose.setText("Close");
        jmiClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCloseActionPerformed(evt);
            }
        });
        jMenu1.add(jmiClose);

        jmiExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        jmiExit.setText("Exit");
        jmiExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiExitActionPerformed(evt);
            }
        });
        jMenu1.add(jmiExit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit(E)");

        jmiUndo.setText("Undo");
        jmiUndo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiUndoActionPerformed(evt);
            }
        });
        jMenu2.add(jmiUndo);

        jmiRedo.setText("Redo");
        jmiRedo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiRedoActionPerformed(evt);
            }
        });
        jMenu2.add(jmiRedo);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Help(H)");

        jMenuItem7.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem7.setText("About");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewBoardActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem7);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-832)/2, (screenSize.height-673)/2, 832, 673);
    }// </editor-fold>//GEN-END:initComponents
// most of the following methods are action performers

    //menu item - save selected
    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
        
        int width = newJPanel1.getWidth();
        int height = newJPanel1.getHeight();
        BufferedImage image = new BufferedImage(width, height,
                                                BufferedImage.TYPE_INT_RGB);
        newJPanel1.saveImage(image); 

        
        
    }//GEN-LAST:event_SaveActionPerformed

    //menu item - new selected
    private void NewBoardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewBoardActionPerformed
        
          AboutBox.showAbout();
        
    }//GEN-LAST:event_NewBoardActionPerformed

    // pen button action performer

    //eraser button action performer

    //clean button action performer
    private void jmiOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiOpenActionPerformed
        // TODO add your handling code here:
        this.loadImg();
    }//GEN-LAST:event_jmiOpenActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        Application.getInstance().closeRoom(room.getRoomId());
        
    }//GEN-LAST:event_formWindowClosing

    private void jtfInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfInputActionPerformed
        // TODO add your handling code here:
         
    }//GEN-LAST:event_jtfInputActionPerformed

    private void jbtClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtClearActionPerformed
        // TODO add your handling code here:
       this.jtfInput.setText("");
       System.out.println(this.cfcbToWho.getSelectedIndex());
    }//GEN-LAST:event_jbtClearActionPerformed

    private void jbtSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtSendActionPerformed
        // TODO add your handling code here:
        String msg = this.jtfInput.getText().trim();
        if(msg.length() == 0) {
            this.showMsgDialog("Please do not send empty message.");
            this.jtfInput.setText("");
            return;
            
        }



        int idx = this.cfcbToWho.getSelectedIndex();
        if(idx == 0)
        Application.getInstance().sendMsg2All(room.getRoomId(), msg);
        else{
            Object o = this.cfcbToWho.getItemAt(idx);
            try{
                if(o instanceof ColorfulCell){
                    ColorfulCell cc = (ColorfulCell)o;
                    if(Application.user.getUserId().equals(cc.i)){
                        this.showMsgDialog(
                                "Please do not send empty message to your self.");
                        return;
                    }else{

                        Application.getInstance().sendMsg2User(
                                room.getRoomId(),cc.i, msg);
                    }
                }
            }catch(Exception e){
                e.printStackTrace();
            }
        }

    }//GEN-LAST:event_jbtSendActionPerformed

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed

        NewJPanel.setShapeNumber(6);
}//GEN-LAST:event_jButton21ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed

        NewJPanel.setShapeNumber(5);
}//GEN-LAST:event_jButton20ActionPerformed

    private void jbtCleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtCleanActionPerformed


        newJPanel1.clear();//newJPanel1.setCleanCanvas(true);
        newJPanel1.informOther(room.getRoomId(), 2);
    }//GEN-LAST:event_jbtCleanActionPerformed

    private void jbtRedoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtRedoActionPerformed
        // Redo button performer
        if(newJPanel1.RedoImageBox.size()>0){
            newJPanel1.Redo();
            newJPanel1.informOther(room.getRoomId(), 1);
        }
        
}//GEN-LAST:event_jbtRedoActionPerformed

    private void jbtUndoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtUndoActionPerformed
        // undo button performer
        if(newJPanel1.UndoImageBox.size()>1){
            newJPanel1.undo();
            newJPanel1.informOther(room.getRoomId(), 0);
            
        }
        
    }//GEN-LAST:event_jbtUndoActionPerformed

    private void LineButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LineButtonActionPerformed

        NewJPanel.setShapeNumber(1);// line button performer
}//GEN-LAST:event_LineButtonActionPerformed

    private void EllipsebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EllipsebuttonActionPerformed
        int select =
        javax.swing.JOptionPane.showOptionDialog(this, "please choose one type circle shape:", "Choose shape",
                JOptionPane.DEFAULT_OPTION,JOptionPane.PLAIN_MESSAGE, null,
                new String[]{"empty circle","filled circle"},"empty rectangule");

        NewJPanel.setShapeNumber(select * 3); //ellipse button performer
}//GEN-LAST:event_EllipsebuttonActionPerformed

    private void RectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RectButtonActionPerformed
        int select =
        javax.swing.JOptionPane.showOptionDialog(this, "please choose one type rectangular shape:", "Choose shape", 
                JOptionPane.DEFAULT_OPTION,JOptionPane.PLAIN_MESSAGE, null,
                new String[]{"empty rectangule","filled rectangule"},"empty rectangule");

        NewJPanel.setShapeNumber((select+1)*2);//Rectangle button performer
}//GEN-LAST:event_RectButtonActionPerformed

    private void TextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextActionPerformed
        //text button performer
       newJPanel1.setShapeNumber(11);
       
}//GEN-LAST:event_TextActionPerformed

    private void setText(String txt, Color c, Font f, Point p){

    }
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        //zoom in button performer
        if(this.scaleFlag<3){
            newJPanel1.setTransform(0);
            this.scaleFlag++;
        }
        
}//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        //zoom out button performer
        if(this.scaleFlag>-1){
            newJPanel1.setTransform(2);
            this.scaleFlag--;
        }
}//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed

        
}//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        loadImg();
}//GEN-LAST:event_jButton8ActionPerformed


private void loadImg(){
    // loading an image from local file
        final JFileChooser fc = new JFileChooser();
        int returnVal = fc.showOpenDialog(jButton8);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File  file = fc.getSelectedFile();
            BufferedImage img = null;
            try {
                img = ImageIO.read(file);
                //NewJPanel imagePanel = new NewJPanel();
                //Graphics2D  g3 =(Graphics2D)imagePanel.getGraphics() ;
                //g3.drawImage(img, null, WIDTH, WIDTH);
                newJPanel1.imageDrawing(img);
                // imagePanel.repaint();
            }

            catch (IOException e) {
                System.out.println("loading image failed.");
            }
        }
}
    private void jplBgColorMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jplBgColorMouseReleased
        Color newColor = JColorChooser.showDialog(
                NewJFrame.this,
                "Choose Background Color",
                newJPanel1.getBackground());
                newJPanel1.setBg(newColor);// color button performer
                this.jplBgColor.setBackground(newColor);
    }//GEN-LAST:event_jplBgColorMouseReleased

    private void jmiExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiExitActionPerformed
        // TODO add your handling code here:
        new Thread(new Runnable(){
            public void run(){
                int confirm = javax.swing.JOptionPane.showConfirmDialog(null,
                        "Do you want to terminate all sessions", "Notice",
                        JOptionPane.PLAIN_MESSAGE);
                if(confirm == JOptionPane.YES_OPTION){
                    Application.getInstance().quitAllRoom();
                }
            }
        }).start();
    }//GEN-LAST:event_jmiExitActionPerformed


    private void newRoom(){
        newThread2CreateRoom();
    }

    private void connectRoom(){
        newThread2ConnectRoom();
    }
    private void newThread2ConnectRoom(){
        new Thread(new Runnable(){
           public void run(){
               // TODO add your handling code here:
         IApplication ap = Application.getInstance();

         /**
         * check ip address
         */
        String ip = showInputDialog(
                "Please input IP address (like \"192.168.1.3\"):","IP address");
        if (ip == null) return;
        while(!checkIp(ip)) {
            showMsgDialog("IP format is not correct, please check and input again.");
            ip = showInputDialog(
                "Please input IP address (like \"192.168.1.3\"):","IP address");
            if(ip == null) return;
        }

        /**
         * check port number
         */
         String port = showInputDialog(
                "Please input remote port(1025-65534):","Port Number");
        if (port == null) return;
        while(!checkPort(port)) {
            showMsgDialog("port format is not correct, please check and input again.");
            port = showInputDialog(
                "Please input remote port(1025-65534):","Port Number");
            if(port == null) return;
        }

   /**
         * check room name
         */
         String roomName = showInputDialog(
                 "Please input room Name:","Room Name");
        if (roomName == null) return;
        while(roomName.trim().length() == 0) {
            showMsgDialog("Room name can not be empty, please check and input again.");
            roomName = showInputDialog(
                 "Please input room Name:","Room Name");
            if(roomName == null) return;
        }

         /**
         * check room name
         */
         String pwd = showInputDialog(
                 "Please input room password:","Room Password");
        if (pwd == null) pwd = "";


         IResponse r = ap.enterRoom(ip, Integer.parseInt(port),roomName, pwd);
         if (!r.isSuccess()) showMsgDialog("Fail to enter room. "+r.getResponseMsg());
           }
        }).start();
    }
    private void newThread2CreateRoom(){
        new Thread(new Runnable(){
            public void run(){
                // TODO add your handling code here:
        IApplication ap = Application.getInstance();
   /**
         * check room name
         */
         String roomName = showInputDialog(
                 "Please input room Name:","Room Name");
        if (roomName == null) return;
        while(roomName.trim().length() == 0) {
            showMsgDialog("Room name can not be empty, please check and input again.");
            roomName = showInputDialog(
                 "Please input room Name:","Room Name");
            if(roomName == null) return;
        }

         /**
         * check room name
         */
         String pwd = showInputDialog(
                 "Please input room password:","Room Password");
        if (pwd == null) pwd = "";

        IResponse r = ap.createRoom(roomName.trim(), pwd);
        if(!r.isSuccess())    showMsgDialog("Fail to create room\n"+r.getResponseMsg());
            }
        }).start();
    }



    private void jmiCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCloseActionPerformed
        // TODO add your handling code here:
        Application.getInstance().closeRoom(room.getRoomId());
       
    }//GEN-LAST:event_jmiCloseActionPerformed

    private void jmiConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiConnectActionPerformed
        // TODO add your handling code here:
        this.connectRoom();
    }//GEN-LAST:event_jmiConnectActionPerformed

    private void jmiNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiNewActionPerformed
        // TODO add your handling code here:
        this.newRoom();
    }//GEN-LAST:event_jmiNewActionPerformed

    private void jmiRedoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiRedoActionPerformed
        this.newJPanel1.Redo();
}//GEN-LAST:event_jmiRedoActionPerformed

    private void jmiUndoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiUndoActionPerformed
        this.newJPanel1.undo();
}//GEN-LAST:event_jmiUndoActionPerformed

    private void jmiKickActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiKickActionPerformed
        // TODO add your handling code here:
        ;
        new Thread(new Runnable(){
            public void run(){
                String kickUserId = ((ColorfulCell)clstUserList.getSelectedValue()).i;
                if(!Application.user.getUserId().equals(kickUserId))
                Application.getInstance().enforceQuitRoom(room.getRoomId(),
                        kickUserId);
            }
        }).start();
    }//GEN-LAST:event_jmiKickActionPerformed

    private void clstUserListMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clstUserListMouseReleased

        if(evt.isPopupTrigger()&& this.clstUserList.getSelectedIndex()!=-1&&
                Application.user.getUserId().equals(room.getRoomOwnerUserId())
                ){
            this.jpmKickMenu.show(this.clstUserList, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_clstUserListMouseReleased

   
        private void showMsgDialog(String msg){
        javax.swing.JOptionPane.showMessageDialog(this,
                    msg);
    }

     private String showInputDialog(String msg, String title){
        return javax.swing.JOptionPane.showInputDialog(this,
                msg, title,
                javax.swing.JOptionPane.DEFAULT_OPTION);
    }
    private void quickChooseColor(java.awt.event.MouseEvent evt){
        Component c = evt.getComponent();
        if(c != null  ){
            Color clr = c.getBackground();
            this.jplBgColor.setBackground(clr);
             newJPanel1.setBg(clr);
             repaint();
        }
    }

       public void RemoteUndoOrder()
    {
            newJPanel1.undo();// when get a undo order from a remote client
            System.out.println("a;sldkjf;");
   }
   public void RemoteRedoOrder()
    {
            newJPanel1.Redo();//when get a redo order from a remote client
            System.out.println("a;sldkjf;23232");
   }
    public  void  receiveNewIShape(IShape newShape)//when receive a new shape that need to draw
    {
//        switch(newShape.getDrawControl()){

//            case 0: // draw shape
                newJPanel1.addShape(newShape);
//                System.out.println("interface checking is done"+newShape.getStokeColor().getRed()+" "
//                 +newShape.getStokeColor().getGreen()+" "+
//                 newShape.getStokeColor().getBlue());
//                 break;
//            default:
//                 newJPanel1.imageDrawing(newShape.getImage());
//                 break;

//        }
   }
    /**
    * @param args the command line arguments
    */
    public static void GUI() {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame(null).setVisible(true);
            }
        });
    }

    public static void main(String[] args){
        GUI();
    }

    public NewJPanel getPanel(){
        return this.newJPanel1;
    }


/**
 * MingyiYang modified on Nov 5 2010
 * Content:
 */

    public void close(){
        IApplication ap = Application.getInstance();
        int roomCounter = ap.roomNumbers();
        if(roomCounter <=1) {

            System.exit(0);
        }
        else {

            this.dispose();
        }
    }

    


    public ColorfulComboBox getToWhoCombox(){
        return (ColorfulComboBox)this.cfcbToWho;
    }


    public ColorfulList getUserListCList(){
        return (ColorfulList)this.clstUserList;
    }

    public ColorfulTextPane getMsgPane(){
        return (ColorfulTextPane)this.ctpReceiveMsg;
    }





    /**
     * check ip address format
     * @param  ip the ip to check up
     * @return whether the format of ip address is correct
     */
    private boolean checkIp(String ip){
        String[] s = ip.split("\\.");
        try{
            if( s== null || s.length!=4) return false;
            for( int i = 0; i < 4 ; i ++){
                int a = Integer.parseInt(s[i]);
                if(a<0||a>255) return false;
            }
        }catch(NumberFormatException nfe){
            nfe.printStackTrace();
            return false;
        }
        return true;
    }

        /**
     * check port number format
     * @param  port , must between 1024 and 65535
     * @return whether the format of port number is correct
     */
    private boolean checkPort(String port){
        try{
            if( port== null ) return false;
                int a = Integer.parseInt(port);
                if(a<1024||a>65535) return false;
        }catch(NumberFormatException nfe){
            nfe.printStackTrace();
            return false;
        }
        return true;
    }


    
//    public JPanel getCanvas()
//    {
//        return newJPanel1;
//    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cfcbToWho;
    private javax.swing.JList clstUserList;
    private javax.swing.JTextPane ctpReceiveMsg;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JButton jbtClean;
    private javax.swing.JButton jbtClear;
    private javax.swing.JButton jbtRedo;
    private javax.swing.JButton jbtSend;
    private javax.swing.JButton jbtUndo;
    public static javax.swing.JLabel jlbCoordinates;
    private javax.swing.JLabel jlbToWho;
    private javax.swing.JMenuItem jmiClose;
    private javax.swing.JMenuItem jmiConnect;
    private javax.swing.JMenuItem jmiExit;
    private javax.swing.JMenuItem jmiKick;
    private javax.swing.JMenuItem jmiNew;
    private javax.swing.JMenuItem jmiOpen;
    private javax.swing.JMenuItem jmiRedo;
    private javax.swing.JMenuItem jmiSave;
    private javax.swing.JMenuItem jmiUndo;
    private javax.swing.JPanel jpColorBar;
    private javax.swing.JPanel jpToolBar;
    javax.swing.JPanel jplBgColor;
    private javax.swing.JPanel jplMainPanel;
    private javax.swing.JPopupMenu jpmKickMenu;
    private javax.swing.JTextField jtfInput;
    // End of variables declaration//GEN-END:variables
 static   int styleChoice = 0;
  static  int sizeChoice = 60;
    String fontChoice = "Dialog";
}
